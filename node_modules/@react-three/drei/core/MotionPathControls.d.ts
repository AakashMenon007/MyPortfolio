import * as THREE from 'three';
import * as React from 'react';
import { ThreeElements } from '@react-three/fiber';
export type MotionPathProps = Omit<ThreeElements['group'], 'ref'> & {
    curves?: THREE.Curve<THREE.Vector3>[];
    debug?: boolean;
    object?: React.RefObject<THREE.Object3D>;
    focus?: [x: number, y: number, z: number] | React.RefObject<THREE.Object3D>;
    offset?: number;
    smooth?: boolean | number;
    eps?: number;
    damping?: number;
    focusDamping?: number;
    maxSpeed?: number;
};
type MotionState = {
    current: number;
    path: THREE.CurvePath<THREE.Vector3>;
    focus: React.RefObject<THREE.Object3D> | [x: number, y: number, z: number] | undefined;
    object: React.RefObject<THREE.Object3D>;
    offset: number;
    point: THREE.Vector3;
    tangent: THREE.Vector3;
    next: THREE.Vector3;
};
export declare function useMotion(): MotionState;
export declare const MotionPathControls: React.ForwardRefExoticComponent<Omit<import("@react-three/fiber/dist/declarations/src/core/utils").Mutable<import("@react-three/fiber/dist/declarations/src/core/utils").Overwrite<Partial<import("@react-three/fiber/dist/declarations/src/core/utils").Overwrite<THREE.Group<THREE.Object3DEventMap>, import("@react-three/fiber").MathProps<THREE.Group<THREE.Object3DEventMap>> & import("@react-three/fiber").ReactProps<THREE.Group<THREE.Object3DEventMap>> & Partial<import("@react-three/fiber").EventHandlers>>>, Omit<import("@react-three/fiber").InstanceProps<THREE.Group<THREE.Object3DEventMap>, typeof THREE.Group>, "object">>>, "ref"> & {
    curves?: THREE.Curve<THREE.Vector3>[];
    debug?: boolean;
    object?: React.RefObject<THREE.Object3D>;
    focus?: [x: number, y: number, z: number] | React.RefObject<THREE.Object3D>;
    offset?: number;
    smooth?: boolean | number;
    eps?: number;
    damping?: number;
    focusDamping?: number;
    maxSpeed?: number;
} & React.RefAttributes<THREE.Group<THREE.Object3DEventMap>>>;
export {};
